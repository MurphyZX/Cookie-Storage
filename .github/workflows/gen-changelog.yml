name: 自动生成变更日志

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  gen:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          show-progress: false

      - name: 提取标签名称
        id: extract_tag
        run: |
          tag_name=${GITHUB_REF#refs/tags/}
          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT

          latest_stable_tag=$(git tag -l 'v*' | grep -v '-' | grep -v "$tag_name" | sort -V | tail -n 1) # 上一个 stable 版本
          newest_tag=$(git tag -l 'v*' | grep -v "$tag_name" | sort -V | tail -n 1) # 除当前外的最新版本
          echo "latest_stable_tag=$latest_stable_tag" >> $GITHUB_OUTPUT
          echo "newest_tag=$newest_tag" >> $GITHUB_OUTPUT

          if [[ $tag_name == *-* ]]; then # 判断新版本是否为 beta 版本
            latest=$newest_tag            # 若是，则将 latest 参数设置为最新版本
          else
            latest=$latest_stable_tag     # 若否，则设置为上一个 stable 版本
          fi

          echo "latest=$latest" >> $GITHUB_OUTPUT

          cat $GITHUB_OUTPUT

      - name: 创建Changelog生成器目录
        run: |
          mkdir -p tools/ChangelogGenerator

      - name: 生成变更日志
        run: |
          git switch master
          python3 tools/ChangelogGenerator/changelog_generator.py --tag "${{ steps.extract_tag.outputs.tag_name }}" --latest "${{ steps.extract_tag.outputs.latest }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 直接推送变更
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .

          commit_msg="docs: 自动生成 "${{ steps.extract_tag.outputs.tag_name }}" 的变更日志"
          git commit -m "$commit_msg"

          git push origin master